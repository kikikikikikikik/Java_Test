import java.util.*;

/**
 * @ClassName SortedMapTest
 * @Desc TODO
 * @Auther 28893
 * @Date 2019/11/25  15:12
 * @Veresion 1.0
 */
public class SortedMapTest {
    //Map key存储Product，value存储重量
    public static void main(String[] args) {
        //SortedMap products=new TreeMap<>();
        //匿名内部类
        SortedMap products=new TreeMap(new Comparator() {
            @Override
            public int compare(Object o1, Object o2) {
                double p1=((Product1)o1).price;
                double p2=((Product1)o2).price;
                if(p1==p2){
                    return 0;
                }
                if(p1>p2){
                    return 1;
                }
                return -1;
            }
        });
        Product1 p1=new Product1("西瓜",1);
        Product1 p2=new Product1("苹果",5.7);
        Product1 p3=new Product1("香蕉",3.65);
        Product1 p4=new Product1("菠萝",18.8);
        //添加
        products.put(p1,2);
        products.put(p2,3.2);
        products.put(p3,7.8);
        products.put(p4,2.1);
        //遍历
        Set keys=products.keySet();
        Iterator it=keys.iterator();
        while(it.hasNext()){
            Object k=it.next();
            Object v=products.get(k);
            System.out.println(k+"--->"+v+"kg");
        }
    }
}
//实现Comparable接口
class Product1 implements Comparable{
    String name;
    double price;
    public Product1(String name, double price) {
        this.name = name;
        this.price = price;
    }
    @Override
    public String toString() {
        return "Product[name="+name+",price="+price+"]";
    }
    @Override
    public int compareTo(Object o) {
        double p1=this.price;
        double p2=((Product1)o).price;
        if(p1==p2){
            return 0;
        }
        if(p1>p2){
            return 1;
        }
        return -1;
    }
}
